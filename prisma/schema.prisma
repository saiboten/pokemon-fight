datasource db {
  provider  = "postgresql"
  // Uses connection pooling
  url       = env("POSTGRES_PRISMA_URL")
  // Uses direct connection, ⚠️ make sure to keep this to `POSTGRES_URL_NON_POOLING`
  // or you'll have dangling databases from migrations
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

generator client {
  provider = "prisma-client-js"
}

model Move {
  id          Int      @id @default(autoincrement())
  name        String
  power       Int
  successRate Int
  Pokemon     Pokemon? @relation(fields: [pokemonId], references: [id])
  pokemonId   Int?
}

model PokemonImage {
  id        Int     @id @default(autoincrement())
  pokemonId Int     @unique
  image     String
  pokemon   Pokemon @relation(fields: [pokemonId], references: [id], onDelete: Cascade)
}

model Pokemon {
  id    Int           @id @default(autoincrement())
  name  String
  hp    Int
  moves Move[]
  image PokemonImage?
}

model User {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  email     String   @unique
  name      String?
  role      Role     @default(USER)
  posts     Post[]
}

model Post {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  published Boolean  @default(false)
  title     String   @db.VarChar(255)
  author    User?    @relation(fields: [authorId], references: [id])
  authorId  Int?
}

enum Role {
  USER
  ADMIN
}
